=============================================
JACK on Windows
=============================================

This installer will install everything to use Jack Audio Connection Kit (JACK) (www.jackaudio.org) on Windows.


=============================================
QJACKCTL on Windows
=============================================

This is a latest version of Rui Nuno Capela QJACKCTL application (http://qjackctl.sourceforge.net/) compiled on Windows. 
It is compiled from the latest CVS version which is using QT4 framework. To uses it:

- start qjackctl.exe and configure it the following way:

	- in Setup/Setting, use "jackd -S" at the "Server Path" item. WARNING: on Windows the "-S" parameter is *mandatory* to have the jack server correctly working!!

	- in Setup/Setting, use "portaudio" at the "Driver" item

	- in Setup/Misc, check the "Start JACK audio server at application startup" box

- quit QJACKCTL and start is again, it should now launch the jack server. Quitting QJACKCTL will now close the jack server.

Starting the jack server with another audio device installed on the machine (like an ASIO card) can now be done directly in QJACKCTL. 
A ">" button at the right of the interface button allows to list the name of all available devices, driven either by "MME", "DirectSound", or "ASIO".
Alternatively using the following command allows to display the names of available devices:

- jackd -d portaudio -l to display the entire list of available audio devices. (jackd -d portaudio -h will display all portaudio driver features)

Then start jackd with the device you want, by using its name, for example:

- jackd -R -S -d portaudio -d "ASIO::MOTU Audio ASIO", then start QJACKCTL. QJACKCTL will see the jackd server already running and then can be used normally.


=============================================
Jack MIDI
=============================================

A first version of a JACK MIDI <==> Windows MIDI bridge (using Windows MME API) is available. 
If can be activated using the -X parameter in jackd command line. So add "-X winmme" in QJACKCTL settings (something like "jackd -S -X winmme"). 
The WinMME driver will scan MIDI input/output ports, open corresponding JACK MIDI ports and convert MIDI in/out into JACK MIDI messages. 
QJACKCTL MIDI connection windows can then be used.


=============================================
JackRouter JACK/ASIO driver
=============================================

JackRouter is an ASIO driver that allows any ASIO compatible application to become a JACK client, thus exchange audio with any other "native" or "Jackified" application. This driver is registered in the system by the installer and becomes available in the list of ASIO drivers when the JACK server is running. A "JackRouter.ini" configuration file allows the application to configure how the JackRouter driver behaves.

	- [IO]: 
		- input/output : the application can obtain any number if JACK input/output ports (not necessarily equal to the audio card input/output number). [Note that some applications force their input/output channel number].
		- float-sample : be default the JackRouter will present audio samples in integer format for the application. Use float-sample=1 so that audio samples are presented in float format for the application (thus saving float/integer conversion time).
	

	- [AUTO_CONNECT] : 
		- input/output : when 1, the application JACK port will automatically be connected to the machine input/output JACK ports.
		- alias : with ASIO drivers, real channels names will be associated to the JACK port as aliases and will be returned when the application request channels names.


=============================================
Known problems
=============================================

- starting/stopping the server several times in QJACKCTL may not work correctly. You may have to quit QJACKCTL and launch it again.


=============================================
Grame : Computer Music Research Laboratory
Web : http://www.grame.fr/Research
E-mail : letz@grame.fr
=============================================